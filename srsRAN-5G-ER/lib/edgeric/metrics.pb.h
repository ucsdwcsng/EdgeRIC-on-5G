// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metrics.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_metrics_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_metrics_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_metrics_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_metrics_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_metrics_2eproto;
class Metrics;
class MetricsDefaultTypeInternal;
extern MetricsDefaultTypeInternal _Metrics_default_instance_;
class UeMetrics;
class UeMetricsDefaultTypeInternal;
extern UeMetricsDefaultTypeInternal _UeMetrics_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::Metrics* Arena::CreateMaybeMessage<::Metrics>(Arena*);
template<> ::UeMetrics* Arena::CreateMaybeMessage<::UeMetrics>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class UeMetrics PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UeMetrics) */ {
 public:
  inline UeMetrics() : UeMetrics(nullptr) {};
  virtual ~UeMetrics();

  UeMetrics(const UeMetrics& from);
  UeMetrics(UeMetrics&& from) noexcept
    : UeMetrics() {
    *this = ::std::move(from);
  }

  inline UeMetrics& operator=(const UeMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline UeMetrics& operator=(UeMetrics&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UeMetrics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UeMetrics* internal_default_instance() {
    return reinterpret_cast<const UeMetrics*>(
               &_UeMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UeMetrics& a, UeMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(UeMetrics* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UeMetrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UeMetrics* New() const final {
    return CreateMaybeMessage<UeMetrics>(nullptr);
  }

  UeMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UeMetrics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UeMetrics& from);
  void MergeFrom(const UeMetrics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UeMetrics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UeMetrics";
  }
  protected:
  explicit UeMetrics(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_metrics_2eproto);
    return ::descriptor_table_metrics_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRntiFieldNumber = 1,
    kCqiFieldNumber = 2,
    kSnrFieldNumber = 3,
    kTxBytesFieldNumber = 4,
    kRxBytesFieldNumber = 5,
    kDlBufferFieldNumber = 6,
    kUlBufferFieldNumber = 7,
    kDlTbsFieldNumber = 8,
  };
  // uint32 rnti = 1;
  void clear_rnti();
  ::PROTOBUF_NAMESPACE_ID::uint32 rnti() const;
  void set_rnti(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rnti() const;
  void _internal_set_rnti(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cqi = 2;
  void clear_cqi();
  ::PROTOBUF_NAMESPACE_ID::uint32 cqi() const;
  void set_cqi(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cqi() const;
  void _internal_set_cqi(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float snr = 3;
  void clear_snr();
  float snr() const;
  void set_snr(float value);
  private:
  float _internal_snr() const;
  void _internal_set_snr(float value);
  public:

  // float tx_bytes = 4;
  void clear_tx_bytes();
  float tx_bytes() const;
  void set_tx_bytes(float value);
  private:
  float _internal_tx_bytes() const;
  void _internal_set_tx_bytes(float value);
  public:

  // float rx_bytes = 5;
  void clear_rx_bytes();
  float rx_bytes() const;
  void set_rx_bytes(float value);
  private:
  float _internal_rx_bytes() const;
  void _internal_set_rx_bytes(float value);
  public:

  // uint32 dl_buffer = 6;
  void clear_dl_buffer();
  ::PROTOBUF_NAMESPACE_ID::uint32 dl_buffer() const;
  void set_dl_buffer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dl_buffer() const;
  void _internal_set_dl_buffer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ul_buffer = 7;
  void clear_ul_buffer();
  ::PROTOBUF_NAMESPACE_ID::uint32 ul_buffer() const;
  void set_ul_buffer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ul_buffer() const;
  void _internal_set_ul_buffer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float dl_tbs = 8;
  void clear_dl_tbs();
  float dl_tbs() const;
  void set_dl_tbs(float value);
  private:
  float _internal_dl_tbs() const;
  void _internal_set_dl_tbs(float value);
  public:

  // @@protoc_insertion_point(class_scope:UeMetrics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rnti_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cqi_;
  float snr_;
  float tx_bytes_;
  float rx_bytes_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dl_buffer_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ul_buffer_;
  float dl_tbs_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_metrics_2eproto;
};
// -------------------------------------------------------------------

class Metrics PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Metrics) */ {
 public:
  inline Metrics() : Metrics(nullptr) {};
  virtual ~Metrics();

  Metrics(const Metrics& from);
  Metrics(Metrics&& from) noexcept
    : Metrics() {
    *this = ::std::move(from);
  }

  inline Metrics& operator=(const Metrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline Metrics& operator=(Metrics&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Metrics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Metrics* internal_default_instance() {
    return reinterpret_cast<const Metrics*>(
               &_Metrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Metrics& a, Metrics& b) {
    a.Swap(&b);
  }
  inline void Swap(Metrics* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Metrics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Metrics* New() const final {
    return CreateMaybeMessage<Metrics>(nullptr);
  }

  Metrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Metrics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Metrics& from);
  void MergeFrom(const Metrics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Metrics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Metrics";
  }
  protected:
  explicit Metrics(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_metrics_2eproto);
    return ::descriptor_table_metrics_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUeMetricsFieldNumber = 2,
    kTtiCntFieldNumber = 1,
  };
  // repeated .UeMetrics ue_metrics = 2;
  int ue_metrics_size() const;
  private:
  int _internal_ue_metrics_size() const;
  public:
  void clear_ue_metrics();
  ::UeMetrics* mutable_ue_metrics(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UeMetrics >*
      mutable_ue_metrics();
  private:
  const ::UeMetrics& _internal_ue_metrics(int index) const;
  ::UeMetrics* _internal_add_ue_metrics();
  public:
  const ::UeMetrics& ue_metrics(int index) const;
  ::UeMetrics* add_ue_metrics();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UeMetrics >&
      ue_metrics() const;

  // uint32 tti_cnt = 1;
  void clear_tti_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint32 tti_cnt() const;
  void set_tti_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tti_cnt() const;
  void _internal_set_tti_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Metrics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UeMetrics > ue_metrics_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tti_cnt_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_metrics_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UeMetrics

// uint32 rnti = 1;
inline void UeMetrics::clear_rnti() {
  rnti_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UeMetrics::_internal_rnti() const {
  return rnti_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UeMetrics::rnti() const {
  // @@protoc_insertion_point(field_get:UeMetrics.rnti)
  return _internal_rnti();
}
inline void UeMetrics::_internal_set_rnti(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rnti_ = value;
}
inline void UeMetrics::set_rnti(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rnti(value);
  // @@protoc_insertion_point(field_set:UeMetrics.rnti)
}

// uint32 cqi = 2;
inline void UeMetrics::clear_cqi() {
  cqi_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UeMetrics::_internal_cqi() const {
  return cqi_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UeMetrics::cqi() const {
  // @@protoc_insertion_point(field_get:UeMetrics.cqi)
  return _internal_cqi();
}
inline void UeMetrics::_internal_set_cqi(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cqi_ = value;
}
inline void UeMetrics::set_cqi(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cqi(value);
  // @@protoc_insertion_point(field_set:UeMetrics.cqi)
}

// float snr = 3;
inline void UeMetrics::clear_snr() {
  snr_ = 0;
}
inline float UeMetrics::_internal_snr() const {
  return snr_;
}
inline float UeMetrics::snr() const {
  // @@protoc_insertion_point(field_get:UeMetrics.snr)
  return _internal_snr();
}
inline void UeMetrics::_internal_set_snr(float value) {
  
  snr_ = value;
}
inline void UeMetrics::set_snr(float value) {
  _internal_set_snr(value);
  // @@protoc_insertion_point(field_set:UeMetrics.snr)
}

// float tx_bytes = 4;
inline void UeMetrics::clear_tx_bytes() {
  tx_bytes_ = 0;
}
inline float UeMetrics::_internal_tx_bytes() const {
  return tx_bytes_;
}
inline float UeMetrics::tx_bytes() const {
  // @@protoc_insertion_point(field_get:UeMetrics.tx_bytes)
  return _internal_tx_bytes();
}
inline void UeMetrics::_internal_set_tx_bytes(float value) {
  
  tx_bytes_ = value;
}
inline void UeMetrics::set_tx_bytes(float value) {
  _internal_set_tx_bytes(value);
  // @@protoc_insertion_point(field_set:UeMetrics.tx_bytes)
}

// float rx_bytes = 5;
inline void UeMetrics::clear_rx_bytes() {
  rx_bytes_ = 0;
}
inline float UeMetrics::_internal_rx_bytes() const {
  return rx_bytes_;
}
inline float UeMetrics::rx_bytes() const {
  // @@protoc_insertion_point(field_get:UeMetrics.rx_bytes)
  return _internal_rx_bytes();
}
inline void UeMetrics::_internal_set_rx_bytes(float value) {
  
  rx_bytes_ = value;
}
inline void UeMetrics::set_rx_bytes(float value) {
  _internal_set_rx_bytes(value);
  // @@protoc_insertion_point(field_set:UeMetrics.rx_bytes)
}

// uint32 dl_buffer = 6;
inline void UeMetrics::clear_dl_buffer() {
  dl_buffer_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UeMetrics::_internal_dl_buffer() const {
  return dl_buffer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UeMetrics::dl_buffer() const {
  // @@protoc_insertion_point(field_get:UeMetrics.dl_buffer)
  return _internal_dl_buffer();
}
inline void UeMetrics::_internal_set_dl_buffer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  dl_buffer_ = value;
}
inline void UeMetrics::set_dl_buffer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dl_buffer(value);
  // @@protoc_insertion_point(field_set:UeMetrics.dl_buffer)
}

// uint32 ul_buffer = 7;
inline void UeMetrics::clear_ul_buffer() {
  ul_buffer_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UeMetrics::_internal_ul_buffer() const {
  return ul_buffer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UeMetrics::ul_buffer() const {
  // @@protoc_insertion_point(field_get:UeMetrics.ul_buffer)
  return _internal_ul_buffer();
}
inline void UeMetrics::_internal_set_ul_buffer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ul_buffer_ = value;
}
inline void UeMetrics::set_ul_buffer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ul_buffer(value);
  // @@protoc_insertion_point(field_set:UeMetrics.ul_buffer)
}

// float dl_tbs = 8;
inline void UeMetrics::clear_dl_tbs() {
  dl_tbs_ = 0;
}
inline float UeMetrics::_internal_dl_tbs() const {
  return dl_tbs_;
}
inline float UeMetrics::dl_tbs() const {
  // @@protoc_insertion_point(field_get:UeMetrics.dl_tbs)
  return _internal_dl_tbs();
}
inline void UeMetrics::_internal_set_dl_tbs(float value) {
  
  dl_tbs_ = value;
}
inline void UeMetrics::set_dl_tbs(float value) {
  _internal_set_dl_tbs(value);
  // @@protoc_insertion_point(field_set:UeMetrics.dl_tbs)
}

// -------------------------------------------------------------------

// Metrics

// uint32 tti_cnt = 1;
inline void Metrics::clear_tti_cnt() {
  tti_cnt_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Metrics::_internal_tti_cnt() const {
  return tti_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Metrics::tti_cnt() const {
  // @@protoc_insertion_point(field_get:Metrics.tti_cnt)
  return _internal_tti_cnt();
}
inline void Metrics::_internal_set_tti_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tti_cnt_ = value;
}
inline void Metrics::set_tti_cnt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tti_cnt(value);
  // @@protoc_insertion_point(field_set:Metrics.tti_cnt)
}

// repeated .UeMetrics ue_metrics = 2;
inline int Metrics::_internal_ue_metrics_size() const {
  return ue_metrics_.size();
}
inline int Metrics::ue_metrics_size() const {
  return _internal_ue_metrics_size();
}
inline void Metrics::clear_ue_metrics() {
  ue_metrics_.Clear();
}
inline ::UeMetrics* Metrics::mutable_ue_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:Metrics.ue_metrics)
  return ue_metrics_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UeMetrics >*
Metrics::mutable_ue_metrics() {
  // @@protoc_insertion_point(field_mutable_list:Metrics.ue_metrics)
  return &ue_metrics_;
}
inline const ::UeMetrics& Metrics::_internal_ue_metrics(int index) const {
  return ue_metrics_.Get(index);
}
inline const ::UeMetrics& Metrics::ue_metrics(int index) const {
  // @@protoc_insertion_point(field_get:Metrics.ue_metrics)
  return _internal_ue_metrics(index);
}
inline ::UeMetrics* Metrics::_internal_add_ue_metrics() {
  return ue_metrics_.Add();
}
inline ::UeMetrics* Metrics::add_ue_metrics() {
  // @@protoc_insertion_point(field_add:Metrics.ue_metrics)
  return _internal_add_ue_metrics();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UeMetrics >&
Metrics::ue_metrics() const {
  // @@protoc_insertion_point(field_list:Metrics.ue_metrics)
  return ue_metrics_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_metrics_2eproto
